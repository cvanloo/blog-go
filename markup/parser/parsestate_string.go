// Code generated by "stringer -type ParseState"; DO NOT EDIT.

package parser

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[ParsingStart-0]
	_ = x[ParsingMeta-1]
	_ = x[ParsingMetaVal-2]
	_ = x[ParsingDocument-3]
	_ = x[ParsingSection1-4]
	_ = x[ParsingSection1Content-5]
	_ = x[ParsingSection2-6]
	_ = x[ParsingSection2Content-7]
	_ = x[ParsingHtmlTag-8]
	_ = x[ParsingParagraph-9]
	_ = x[ParsingCodeBlock-10]
	_ = x[ParsingImage-11]
	_ = x[ParsingBlockquote-12]
	_ = x[ParsingBlockquoteAttrAuthor-13]
	_ = x[ParsingBlockquoteAttrSource-14]
	_ = x[ParsingEnquote-15]
	_ = x[ParsingEmphasis-16]
	_ = x[ParsingStrong-17]
	_ = x[ParsingEmphasisStrong-18]
	_ = x[ParsingLink-19]
}

const _ParseState_name = "ParsingStartParsingMetaParsingMetaValParsingDocumentParsingSection1ParsingSection1ContentParsingSection2ParsingSection2ContentParsingHtmlTagParsingParagraphParsingCodeBlockParsingImageParsingBlockquoteParsingBlockquoteAttrAuthorParsingBlockquoteAttrSourceParsingEnquoteParsingEmphasisParsingStrongParsingEmphasisStrongParsingLink"

var _ParseState_index = [...]uint16{0, 12, 23, 37, 52, 67, 89, 104, 126, 140, 156, 172, 184, 201, 228, 255, 269, 284, 297, 318, 329}

func (i ParseState) String() string {
	if i < 0 || i >= ParseState(len(_ParseState_index)-1) {
		return "ParseState(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _ParseState_name[_ParseState_index[i]:_ParseState_index[i+1]]
}
