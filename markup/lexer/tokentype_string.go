// Code generated by "stringer -type TokenType -trimprefix Token"; DO NOT EDIT.

package lexer

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[TokenEOF-0]
	_ = x[TokenMetaBegin-1]
	_ = x[TokenMetaKey-2]
	_ = x[TokenMetaEnd-3]
	_ = x[TokenHtmlTagOpen-4]
	_ = x[TokenHtmlTagAttrKey-5]
	_ = x[TokenHtmlTagAttrVal-6]
	_ = x[TokenHtmlTagContent-7]
	_ = x[TokenHtmlTagClose-8]
	_ = x[TokenSection1Begin-9]
	_ = x[TokenSection1Content-10]
	_ = x[TokenSection1End-11]
	_ = x[TokenSection2Begin-12]
	_ = x[TokenSection2Content-13]
	_ = x[TokenSection2End-14]
	_ = x[TokenParagraphBegin-15]
	_ = x[TokenParagraphEnd-16]
	_ = x[TokenText-17]
	_ = x[TokenAmpSpecial-18]
	_ = x[TokenMono-19]
	_ = x[TokenEmphasisBegin-20]
	_ = x[TokenEmphasisEnd-21]
	_ = x[TokenStrikethroughBegin-22]
	_ = x[TokenStrikethroughEnd-23]
	_ = x[TokenMarkerBegin-24]
	_ = x[TokenMarkerEnd-25]
	_ = x[TokenStrongBegin-26]
	_ = x[TokenStrongEnd-27]
	_ = x[TokenEmphasisStrongBegin-28]
	_ = x[TokenEmphasisStrongEnd-29]
	_ = x[TokenEnquoteSingleBegin-30]
	_ = x[TokenEnquoteSingleEnd-31]
	_ = x[TokenEnquoteDoubleBegin-32]
	_ = x[TokenEnquoteDoubleEnd-33]
	_ = x[TokenEnquoteAngledBegin-34]
	_ = x[TokenEnquoteAngledEnd-35]
	_ = x[TokenDefinitionTerm-36]
	_ = x[TokenDefinitionExplanationBegin-37]
	_ = x[TokenDefinitionExplanationEnd-38]
	_ = x[TokenHorizontalRule-39]
	_ = x[TokenBlockquoteBegin-40]
	_ = x[TokenBlockquoteAttrAuthor-41]
	_ = x[TokenBlockquoteAttrSource-42]
	_ = x[TokenBlockquoteAttrEnd-43]
	_ = x[TokenBlockquoteEnd-44]
	_ = x[TokenImageBegin-45]
	_ = x[TokenImageAltText-46]
	_ = x[TokenImagePath-47]
	_ = x[TokenImageTitle-48]
	_ = x[TokenImageEnd-49]
	_ = x[TokenSidenoteRef-50]
	_ = x[TokenSidenoteDef-51]
	_ = x[TokenSidenoteDefEnd-52]
	_ = x[TokenSidenoteContent-53]
	_ = x[TokenLinkify-54]
	_ = x[TokenLinkHref-55]
	_ = x[TokenLinkRef-56]
	_ = x[TokenLinkDef-57]
	_ = x[TokenLinkableBegin-58]
	_ = x[TokenLinkableEnd-59]
	_ = x[TokenCodeBlockBegin-60]
	_ = x[TokenCodeBlockLang-61]
	_ = x[TokenCodeBlockEnd-62]
	_ = x[TokenAttributeListBegin-63]
	_ = x[TokenAttributeListID-64]
	_ = x[TokenAttributeListKey-65]
	_ = x[TokenAttributeListEnd-66]
}

const _TokenType_name = "EOFMetaBeginMetaKeyMetaEndHtmlTagOpenHtmlTagAttrKeyHtmlTagAttrValHtmlTagContentHtmlTagCloseSection1BeginSection1ContentSection1EndSection2BeginSection2ContentSection2EndParagraphBeginParagraphEndTextAmpSpecialMonoEmphasisBeginEmphasisEndStrikethroughBeginStrikethroughEndMarkerBeginMarkerEndStrongBeginStrongEndEmphasisStrongBeginEmphasisStrongEndEnquoteSingleBeginEnquoteSingleEndEnquoteDoubleBeginEnquoteDoubleEndEnquoteAngledBeginEnquoteAngledEndDefinitionTermDefinitionExplanationBeginDefinitionExplanationEndHorizontalRuleBlockquoteBeginBlockquoteAttrAuthorBlockquoteAttrSourceBlockquoteAttrEndBlockquoteEndImageBeginImageAltTextImagePathImageTitleImageEndSidenoteRefSidenoteDefSidenoteDefEndSidenoteContentLinkifyLinkHrefLinkRefLinkDefLinkableBeginLinkableEndCodeBlockBeginCodeBlockLangCodeBlockEndAttributeListBeginAttributeListIDAttributeListKeyAttributeListEnd"

var _TokenType_index = [...]uint16{0, 3, 12, 19, 26, 37, 51, 65, 79, 91, 104, 119, 130, 143, 158, 169, 183, 195, 199, 209, 213, 226, 237, 255, 271, 282, 291, 302, 311, 330, 347, 365, 381, 399, 415, 433, 449, 463, 489, 513, 527, 542, 562, 582, 599, 612, 622, 634, 643, 653, 661, 672, 683, 697, 712, 719, 727, 734, 741, 754, 765, 779, 792, 804, 822, 837, 853, 869}

func (i TokenType) String() string {
	if i < 0 || i >= TokenType(len(_TokenType_index)-1) {
		return "TokenType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _TokenType_name[_TokenType_index[i]:_TokenType_index[i+1]]
}
