// Code generated by "stringer -type TokenType -trimprefix Token"; DO NOT EDIT.

package lexer

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[TokenEOF-0]
	_ = x[TokenMetaBegin-1]
	_ = x[TokenMetaKey-2]
	_ = x[TokenMetaEnd-3]
	_ = x[TokenHtmlTagOpen-4]
	_ = x[TokenHtmlTagAttrKey-5]
	_ = x[TokenHtmlTagAttrVal-6]
	_ = x[TokenHtmlTagContent-7]
	_ = x[TokenHtmlTagClose-8]
	_ = x[TokenSection1Begin-9]
	_ = x[TokenSection1Content-10]
	_ = x[TokenSection1End-11]
	_ = x[TokenSection2Begin-12]
	_ = x[TokenSection2Content-13]
	_ = x[TokenSection2End-14]
	_ = x[TokenParagraphBegin-15]
	_ = x[TokenParagraphEnd-16]
	_ = x[TokenText-17]
	_ = x[TokenLineBreak-18]
	_ = x[TokenAmpSpecial-19]
	_ = x[TokenMono-20]
	_ = x[TokenEmphasisBegin-21]
	_ = x[TokenEmphasisEnd-22]
	_ = x[TokenStrikethroughBegin-23]
	_ = x[TokenStrikethroughEnd-24]
	_ = x[TokenMarkerBegin-25]
	_ = x[TokenMarkerEnd-26]
	_ = x[TokenStrongBegin-27]
	_ = x[TokenStrongEnd-28]
	_ = x[TokenEmphasisStrongBegin-29]
	_ = x[TokenEmphasisStrongEnd-30]
	_ = x[TokenEnquoteSingleBegin-31]
	_ = x[TokenEnquoteSingleEnd-32]
	_ = x[TokenEnquoteDoubleBegin-33]
	_ = x[TokenEnquoteDoubleEnd-34]
	_ = x[TokenEnquoteAngledBegin-35]
	_ = x[TokenEnquoteAngledEnd-36]
	_ = x[TokenDefinitionTerm-37]
	_ = x[TokenDefinitionExplanationBegin-38]
	_ = x[TokenDefinitionExplanationEnd-39]
	_ = x[TokenHorizontalRule-40]
	_ = x[TokenBlockquoteBegin-41]
	_ = x[TokenBlockquoteAttrAuthor-42]
	_ = x[TokenBlockquoteAttrSource-43]
	_ = x[TokenBlockquoteAttrEnd-44]
	_ = x[TokenBlockquoteEnd-45]
	_ = x[TokenImageBegin-46]
	_ = x[TokenImageAltText-47]
	_ = x[TokenImagePath-48]
	_ = x[TokenImageTitle-49]
	_ = x[TokenImageEnd-50]
	_ = x[TokenSidenoteRef-51]
	_ = x[TokenSidenoteDef-52]
	_ = x[TokenSidenoteDefEnd-53]
	_ = x[TokenSidenoteContent-54]
	_ = x[TokenLinkify-55]
	_ = x[TokenLinkHref-56]
	_ = x[TokenLinkRef-57]
	_ = x[TokenLinkDef-58]
	_ = x[TokenLinkableBegin-59]
	_ = x[TokenLinkableEnd-60]
	_ = x[TokenCodeBlockBegin-61]
	_ = x[TokenCodeBlockLang-62]
	_ = x[TokenCodeBlockEnd-63]
	_ = x[TokenAttributeListBegin-64]
	_ = x[TokenAttributeListID-65]
	_ = x[TokenAttributeListKey-66]
	_ = x[TokenAttributeListEnd-67]
}

const _TokenType_name = "EOFMetaBeginMetaKeyMetaEndHtmlTagOpenHtmlTagAttrKeyHtmlTagAttrValHtmlTagContentHtmlTagCloseSection1BeginSection1ContentSection1EndSection2BeginSection2ContentSection2EndParagraphBeginParagraphEndTextLineBreakAmpSpecialMonoEmphasisBeginEmphasisEndStrikethroughBeginStrikethroughEndMarkerBeginMarkerEndStrongBeginStrongEndEmphasisStrongBeginEmphasisStrongEndEnquoteSingleBeginEnquoteSingleEndEnquoteDoubleBeginEnquoteDoubleEndEnquoteAngledBeginEnquoteAngledEndDefinitionTermDefinitionExplanationBeginDefinitionExplanationEndHorizontalRuleBlockquoteBeginBlockquoteAttrAuthorBlockquoteAttrSourceBlockquoteAttrEndBlockquoteEndImageBeginImageAltTextImagePathImageTitleImageEndSidenoteRefSidenoteDefSidenoteDefEndSidenoteContentLinkifyLinkHrefLinkRefLinkDefLinkableBeginLinkableEndCodeBlockBeginCodeBlockLangCodeBlockEndAttributeListBeginAttributeListIDAttributeListKeyAttributeListEnd"

var _TokenType_index = [...]uint16{0, 3, 12, 19, 26, 37, 51, 65, 79, 91, 104, 119, 130, 143, 158, 169, 183, 195, 199, 208, 218, 222, 235, 246, 264, 280, 291, 300, 311, 320, 339, 356, 374, 390, 408, 424, 442, 458, 472, 498, 522, 536, 551, 571, 591, 608, 621, 631, 643, 652, 662, 670, 681, 692, 706, 721, 728, 736, 743, 750, 763, 774, 788, 801, 813, 831, 846, 862, 878}

func (i TokenType) String() string {
	if i < 0 || i >= TokenType(len(_TokenType_index)-1) {
		return "TokenType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _TokenType_name[_TokenType_index[i]:_TokenType_index[i+1]]
}
